# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 's_v2.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QDialog, QApplication, QPushButton, QVBoxLayout, QSizePolicy
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg as FigureCanvas
from matplotlib.backends.backend_qt5agg import NavigationToolbar2QT as NavigationToolbar
import matplotlib.pyplot as plt
from matplotlib.figure import Figure
from src.interaction import Interaction
from src.utils import UIelements


# class generated by Qt Designer
class Ui_MainWindow(object):
    def setupUi(self, MainWindow: QtWidgets.QMainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(851, 619)
        MainWindow.setLayoutDirection(QtCore.Qt.LeftToRight)
        MainWindow.setStyleSheet("background-color: rgb(108, 175, 249);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout_main = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout_main.setObjectName("horizontalLayout_main")
        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setMinimumSize(QtCore.QSize(325, 0))
        self.groupBox.setMaximumSize(QtCore.QSize(325, 16777215))
        self.groupBox.setTitle("")
        self.groupBox.setObjectName("groupBox")
        self.formLayout = QtWidgets.QFormLayout(self.groupBox)
        self.formLayout.setObjectName("formLayout")
        self.label_start = QtWidgets.QLabel(self.groupBox)
        self.label_start.setMinimumSize(QtCore.QSize(300, 130))
        self.label_start.setMaximumSize(QtCore.QSize(300, 40))
        self.label_start.setStyleSheet("background-color: rgb(255, 255, 127);")
        self.label_start.setAlignment(QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.label_start.setObjectName("label_start")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_start)
        self.verticalLayout_func = QtWidgets.QVBoxLayout()
        self.verticalLayout_func.setObjectName("verticalLayout_func")
        self.label_func = QtWidgets.QLabel(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_func.sizePolicy().hasHeightForWidth())
        self.label_func.setSizePolicy(sizePolicy)
        self.label_func.setMinimumSize(QtCore.QSize(70, 25))
        self.label_func.setMaximumSize(QtCore.QSize(70, 25))
        self.label_func.setMouseTracking(True)
        self.label_func.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_func.setStyleSheet("background-color: rgb(0, 255, 255);")
        self.label_func.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.label_func.setFrameShadow(QtWidgets.QFrame.Plain)
        self.label_func.setTextFormat(QtCore.Qt.AutoText)
        self.label_func.setAlignment(QtCore.Qt.AlignCenter)
        self.label_func.setObjectName("label_func")
        self.verticalLayout_func.addWidget(self.label_func)
        self.textEdit_func = QtWidgets.QTextEdit(self.groupBox)
        self.textEdit_func.setMinimumSize(QtCore.QSize(300, 30))
        self.textEdit_func.setMaximumSize(QtCore.QSize(300, 30))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.textEdit_func.setFont(font)
        self.textEdit_func.setStyleSheet("background-color: rgb(170, 255, 255);")
        self.textEdit_func.setObjectName("textEdit_func")
        self.verticalLayout_func.addWidget(self.textEdit_func)
        self.formLayout.setLayout(1, QtWidgets.QFormLayout.LabelRole, self.verticalLayout_func)
        self.verticalLayout_XY = QtWidgets.QVBoxLayout()
        self.verticalLayout_XY.setObjectName("verticalLayout_XY")
        self.horizontalLayout_X = QtWidgets.QHBoxLayout()
        self.horizontalLayout_X.setObjectName("horizontalLayout_X")
        self.label_X = QtWidgets.QLabel(self.groupBox)
        self.label_X.setMinimumSize(QtCore.QSize(20, 30))
        self.label_X.setMaximumSize(QtCore.QSize(16777215, 30))
        self.label_X.setStyleSheet("background-color: rgb(0, 255, 255);")
        self.label_X.setAlignment(QtCore.Qt.AlignCenter)
        self.label_X.setObjectName("label_X")
        self.horizontalLayout_X.addWidget(self.label_X)
        self.plainTextEdit_X = QtWidgets.QPlainTextEdit(self.groupBox)
        self.plainTextEdit_X.setMaximumSize(QtCore.QSize(16777215, 30))
        self.plainTextEdit_X.setStyleSheet("background-color: rgb(170, 255, 255);")
        self.plainTextEdit_X.setObjectName("plainTextEdit_X")
        self.horizontalLayout_X.addWidget(self.plainTextEdit_X)
        self.verticalLayout_XY.addLayout(self.horizontalLayout_X)
        self.horizontalLayout_Y = QtWidgets.QHBoxLayout()
        self.horizontalLayout_Y.setObjectName("horizontalLayout_Y")
        self.label_Y = QtWidgets.QLabel(self.groupBox)
        self.label_Y.setMinimumSize(QtCore.QSize(20, 30))
        self.label_Y.setMaximumSize(QtCore.QSize(16777215, 30))
        self.label_Y.setStyleSheet("background-color: rgb(0, 255, 255);")
        self.label_Y.setAlignment(QtCore.Qt.AlignCenter)
        self.label_Y.setObjectName("label_Y")
        self.horizontalLayout_Y.addWidget(self.label_Y)
        self.plainTextEdit_Y = QtWidgets.QPlainTextEdit(self.groupBox)
        self.plainTextEdit_Y.setMaximumSize(QtCore.QSize(16777215, 30))
        self.plainTextEdit_Y.setStyleSheet("background-color: rgb(170, 255, 255);")
        self.plainTextEdit_Y.setObjectName("plainTextEdit_Y")
        self.horizontalLayout_Y.addWidget(self.plainTextEdit_Y)
        self.verticalLayout_XY.addLayout(self.horizontalLayout_Y)
        self.formLayout.setLayout(2, QtWidgets.QFormLayout.LabelRole, self.verticalLayout_XY)
        self.btn_find = QtWidgets.QPushButton(self.groupBox)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.btn_find.setFont(font)
        self.btn_find.setStyleSheet("background-color: rgb(144, 250, 255);")
        self.btn_find.setObjectName("btn_find")
        self.formLayout.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.btn_find)

        self.label_answer = QtWidgets.QLabel(self.groupBox)
        # self.label_answer = QtWidgets.QPlainTextEdit(self.groupBox)
        self.label_answer.setMinimumSize(QtCore.QSize(300, 80))
        self.label_answer.setMaximumSize(QtCore.QSize(300, 16777215))
        self.label_answer.setStyleSheet("background-color: rgb(208, 208, 208);")
        self.label_answer.setAlignment(QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.label_answer.setObjectName("label_answer")
        self.formLayout.setWidget(5, QtWidgets.QFormLayout.LabelRole, self.label_answer)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label = QtWidgets.QLabel(self.groupBox)
        self.label.setStyleSheet("background-color: rgb(0, 255, 255);")
        self.label.setObjectName("label")
        self.horizontalLayout.addWidget(self.label)
        self.comboBox_accuracy = QtWidgets.QComboBox(self.groupBox)
        self.comboBox_accuracy.setStyleSheet("background-color: rgb(170, 255, 255);")
        self.comboBox_accuracy.setEditable(True)
        self.comboBox_accuracy.setObjectName("comboBox_accuracy")
        self.comboBox_accuracy.addItem("")
        self.comboBox_accuracy.addItem("")
        self.comboBox_accuracy.addItem("")
        self.comboBox_accuracy.addItem("")
        self.comboBox_accuracy.addItem("")
        self.horizontalLayout.addWidget(self.comboBox_accuracy)
        self.formLayout.setLayout(3, QtWidgets.QFormLayout.LabelRole, self.horizontalLayout)
        self.horizontalLayout_main.addWidget(self.groupBox)
        self.verticalLayout_plot = QtWidgets.QVBoxLayout()
        self.verticalLayout_plot.setObjectName("verticalLayout_plot")
        self.horizontalLayout_main.addLayout(self.verticalLayout_plot)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 851, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.toolBar = QtWidgets.QToolBar(MainWindow)
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.statusBar = QtWidgets.QStatusBar(MainWindow)
        self.statusBar.setObjectName("statusBar")
        MainWindow.setStatusBar(self.statusBar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow: QtWidgets.QMainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Solve&Visualize"))
        self.label_start.setText(_translate("MainWindow",
                                            "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
                                            "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
                                            "p, li { white-space: pre-wrap; }\n"
                                            "</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
                                            "<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:11pt; font-weight:600; color:#000000;\">Enter function, start point coordinates.</span></p>\n"
                                            "<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt; font-weight:600; color:#515151;\">After finding the solution, you can view </span></p>\n"
                                            "<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt; font-weight:600; color:#515151;\">the trajectory of the solution step by step.</span></p>\n"
                                            "<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt; font-weight:600; color:#515151;\">NB: only symbols \'x\' and \'y\' can be used </span></p>\n"
                                            "<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt; font-weight:600; color:#515151;\">as variables</span></p></body></html>"))
        self.label_func.setText(_translate("MainWindow",
                                           "<html><head/><body><p align=\"center\"><span style=\" font-size:10pt; font-weight:600;\">Function:</span></p></body></html>"))
        self.textEdit_func.setPlaceholderText(_translate("MainWindow", "Enter function"))
        self.label_X.setText(_translate("MainWindow",
                                        "<html><head/><body><p><span style=\" font-size:10pt; font-weight:600;\">X:</span></p></body></html>"))
        self.plainTextEdit_X.setPlaceholderText(
            _translate("MainWindow", "Enter the start value of the \'x\' coordinate"))
        self.label_Y.setText(_translate("MainWindow",
                                        "<html><head/><body><p><span style=\" font-size:10pt; font-weight:600;\">Y:</span></p></body></html>"))
        self.plainTextEdit_Y.setPlaceholderText(
            _translate("MainWindow", "Enter the start value of the \'y\' coordinate"))
        self.btn_find.setText(_translate("MainWindow", "Find minimum!"))
        self.label_answer.setText(_translate("MainWindow",
                                             "<html><head/><body><p><span style=\" font-size:10pt;\">We will solve all your problems... almost)</span></p></body></html>"))
        self.label.setText(_translate("MainWindow",
                                      "<html><head/><body><p><span style=\" font-size:10pt; font-weight:600;\">Choose accuracy:</span></p></body></html>"))
        self.comboBox_accuracy.setItemText(0, _translate("MainWindow", "0.1"))
        self.comboBox_accuracy.setItemText(1, _translate("MainWindow", "0.01"))
        self.comboBox_accuracy.setItemText(2, _translate("MainWindow", "0.001"))
        self.comboBox_accuracy.setItemText(3, _translate("MainWindow", "0.0001"))
        self.comboBox_accuracy.setItemText(4, _translate("MainWindow", "0.00001"))
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar"))


class Window(Ui_MainWindow):
    """
    Class-wrapper for class generated by Qt Designer
    """

    # def __init__(self, main_window: QtWidgets.QMainWindow):
    def __init__(self):
        self.main_window = QtWidgets.QMainWindow()
        self.figure: Figure
        self.setupUi(self.main_window)
        self.setup_canvas()
        self.setup_interaction()

    def show(self):
        self.main_window.show()

    # move to constructor?  - yes!
    # def run(self):
    #     """
    #     Calling methods that set the UI, canvas and interaction
    #     """
    #     self.setupUi(self.main_window)
    #     self.setup_canvas()
    #     self.setup_interaction()

    def setup_canvas(self):
        """
        Creating and adding to layout toolbar and canvas
        """
        self.figure = plt.figure()
        self.canvas = FigureCanvas(self.figure)
        self.toolbar = NavigationToolbar(self.canvas, self.main_window)
        self.verticalLayout_plot.addWidget(self.toolbar)
        self.verticalLayout_plot.addWidget(self.canvas)

    def setup_interaction(self):
        """
        Method set the interaction between UI elements and calculating algorithm
        """
        self.ui_elements = UIelements(find_btn=self.btn_find, figure=self.figure, canvas=self.canvas,
                                      func_field=self.textEdit_func, x_field=self.plainTextEdit_X,
                                      y_field=self.plainTextEdit_Y, result_field=self.label_answer,
                                      cb_accuracy=self.comboBox_accuracy)
        self.interaction = Interaction(self.ui_elements)
