# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 's_v.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QDialog, QApplication, QPushButton, QVBoxLayout, QSizePolicy
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg as FigureCanvas
from matplotlib.backends.backend_qt5agg import NavigationToolbar2QT as NavigationToolbar
import matplotlib.pyplot as plt
import random
import numpy as np
from src.interaction import Interaction
from src.utils import UIelements


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1000, 625)
        MainWindow.setStyleSheet("background-color: rgb(108, 175, 249);")

        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        self.btn_find = QtWidgets.QPushButton(self.centralwidget)
        self.btn_find.setGeometry(QtCore.QRect(10, 150, 131, 23))
        self.btn_find.setStyleSheet("background-color: rgb(144, 250, 255);")
        self.btn_find.setObjectName("find_btn")

        # self.btn_find.clicked.connect(self.plot)

        self.start_label = QtWidgets.QLabel(self.centralwidget)
        self.start_label.setGeometry(QtCore.QRect(10, 10, 231, 41))
        self.start_label.setStyleSheet("background-color: rgb(255, 255, 127);")
        self.start_label.setObjectName("start_label")

        self.horizontalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(10, 60, 301, 31))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")

        self.horizontalLayout_enter_func = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout_enter_func.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_enter_func.setObjectName("horizontalLayout_enter_func")

        self.label_func = QtWidgets.QLabel(self.horizontalLayoutWidget)
        self.label_func.setStyleSheet("background-color: rgb(0, 255, 255);")
        self.label_func.setObjectName("label_func")
        self.horizontalLayout_enter_func.addWidget(self.label_func)

        self.plainTextEdit_func = QtWidgets.QPlainTextEdit(self.horizontalLayoutWidget)
        self.plainTextEdit_func.setStyleSheet("background-color: rgb(170, 255, 255);")
        self.plainTextEdit_func.setObjectName("plainTextEdit_func")
        self.horizontalLayout_enter_func.addWidget(self.plainTextEdit_func)

        self.horizontalLayoutWidget_2 = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget_2.setGeometry(QtCore.QRect(10, 100, 231, 31))
        self.horizontalLayoutWidget_2.setObjectName("horizontalLayoutWidget_2")

        self.horizontalLayout_enter_point = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_2)
        self.horizontalLayout_enter_point.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_enter_point.setObjectName("horizontalLayout_enter_point")

        self.label_X = QtWidgets.QLabel(self.horizontalLayoutWidget_2)
        self.label_X.setStyleSheet("background-color: rgb(0, 255, 255);")
        self.label_X.setObjectName("label_X")
        self.horizontalLayout_enter_point.addWidget(self.label_X)

        self.plainTextEdit_X = QtWidgets.QPlainTextEdit(self.horizontalLayoutWidget_2)
        self.plainTextEdit_X.setStyleSheet("background-color: rgb(170, 255, 255);")
        self.plainTextEdit_X.setObjectName("plainTextEdit_X")
        self.horizontalLayout_enter_point.addWidget(self.plainTextEdit_X)

        self.label_Y = QtWidgets.QLabel(self.horizontalLayoutWidget_2)
        self.label_Y.setStyleSheet("background-color: rgb(0, 255, 255);")
        self.label_Y.setObjectName("label_Y")
        self.horizontalLayout_enter_point.addWidget(self.label_Y)

        self.plainTextEdit_Y = QtWidgets.QPlainTextEdit(self.horizontalLayoutWidget_2)
        self.plainTextEdit_Y.setStyleSheet("background-color: rgb(170, 255, 255);")
        self.plainTextEdit_Y.setObjectName("plainTextEdit_Y")
        self.horizontalLayout_enter_point.addWidget(self.plainTextEdit_Y)

        # a figure instance to plot on
        self.figure = plt.figure()

        # this is the Canvas Widget that displays the `figure`
        # it takes the `figure` instance as a parameter to __init__
        self.canvas = FigureCanvas(self.figure)

        # this is the Navigation widget
        # it takes the Canvas widget and a parent
        self.toolbar = NavigationToolbar(self.canvas, MainWindow)

        self.verticalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(10, 230, 491, 381))
        self.verticalLayoutWidget.setObjectName("vercicalLayoutWidget")
        self.verticalLayoutWidget.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)

        # set the layout
        self.plot_layout = QVBoxLayout(self.verticalLayoutWidget)
        self.plot_layout.setContentsMargins(0, 0, 0, 0)
        self.plot_layout.setObjectName("plot_layout")

        self.plot_layout.addWidget(self.toolbar)
        self.plot_layout.addWidget(self.canvas)
        # layout.addWidget(self.button)
        MainWindow.setLayout(self.plot_layout)

        # self.plot_widget = QtWidgets.QWidget(self.centralwidget)
        # self.plot_widget.setGeometry(QtCore.QRect(10, 200, 441, 331))
        # self.plot_widget.setStyleSheet("background-color: rgb(177, 177, 177);")
        # self.plot_widget.setObjectName("plot_widget")

        self.label_answer = QtWidgets.QLabel(self.centralwidget)
        self.label_answer.setGeometry(QtCore.QRect(160, 140, 251, 31))
        self.label_answer.setStyleSheet("background-color: rgb(208, 208, 208);")
        self.label_answer.setObjectName("label_answer")

        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)

        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.init_ui_elements()

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def init_ui_elements(self):
        self.ui_elements = UIelements(find_btn=self.btn_find, figure=self.figure, canvas=self.canvas,
                                      func_field=self.plainTextEdit_func, x_field=self.plainTextEdit_X,
                                      y_field=self.plainTextEdit_Y, result_field=self.label_answer)
        self.interaction = Interaction(self.ui_elements)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Solve&Visualize"))
        self.btn_find.setText(_translate("MainWindow", "Find minimum!"))
        self.start_label.setText(_translate("MainWindow", "Enter function and start point coordinates:"))
        self.label_func.setText(_translate("MainWindow", "Function:"))
        self.label_X.setText(_translate("MainWindow", "X:"))
        self.label_Y.setText(_translate("MainWindow", "Y:"))
        self.label_answer.setText(_translate("MainWindow", "We will solve all your problems... almost)"))

    # def plot(self, data: np.ndarray = None):
    #     ''' plot some random stuff '''
    #     # random data
    #     data = [random.random() for i in range(10)]
    #
    #     # instead of ax.hold(False)
    #     self.figure.clear()
    #
    #     # create an axis
    #     ax = self.figure.add_subplot(111)
    #
    #     # discards the old graph
    #     # ax.hold(False) # deprecated, see above
    #
    #     # plot data
    #     ax.plot(data, '*-')
    #
    #     # refresh canvas
    #     self.canvas.draw()


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
